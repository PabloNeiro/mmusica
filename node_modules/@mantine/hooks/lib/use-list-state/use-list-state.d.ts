import React from 'react';
export interface UseListStateHandler<T> {
    setState: React.Dispatch<React.SetStateAction<T[]>>;
    append: (...items: T[]) => T[];
    prepend: (...items: T[]) => T[];
    insert: (index: number, ...items: T[]) => T[];
    pop: () => T[];
    shift: () => T[];
    apply: (fn: (item: T, index?: number) => T) => T[];
    applyWhere: (condition: (item: T, index: number) => boolean, fn: (item: T, index?: number) => T) => T[];
    remove: (...indices: number[]) => T[];
    reorder: ({ from, to }: {
        from: number;
        to: number;
    }) => T[];
    setItem: (index: number, item: T) => T[];
    setItemProp: <K extends keyof T, U extends T[K]>(index: number, prop: K, value: U) => T[];
}
export declare type UseListState<T> = [T[], UseListStateHandler<T>];
export declare function useListState<T>(initialValue?: T[]): UseListState<T>;
//# sourceMappingURL=use-list-state.d.ts.map